

-- Tabla de categorías de peso (ej: Lightweight, Welterweight, etc.)
CREATE TABLE categoria_peso (
    id_categoria    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre          VARCHAR2(50) NOT NULL,
    limite_inferior NUMBER(5,2), -- en kg
    limite_superior NUMBER(5,2)  -- en kg
);

-- Tabla de estilos de combate (ej: Jiu-Jitsu, Muay Thai, Wrestling)
CREATE TABLE estilo_combate (
    id_estilo   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre      VARCHAR2(50) NOT NULL UNIQUE
);

-- Tabla de peleadores
CREATE TABLE peleador (
    id_peleador     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre          VARCHAR2(100) NOT NULL,
    apodo           VARCHAR2(50),
    edad            NUMBER(3),
    nacionalidad    VARCHAR2(50),
    id_categoria    NUMBER NOT NULL,
    victorias       NUMBER DEFAULT 0,
    derrotas        NUMBER DEFAULT 0,
    empates         NUMBER DEFAULT 0,
    CHECK (victorias >= 0 AND derrotas >= 0 AND empates >= 0),
    CONSTRAINT fk_categoria FOREIGN KEY (id_categoria)
        REFERENCES categoria_peso(id_categoria)
);

-- Relación N:M entre peleadores y estilos de combate
CREATE TABLE peleador_estilo (
    id_peleador NUMBER NOT NULL,
    id_estilo   NUMBER NOT NULL,
    PRIMARY KEY (id_peleador, id_estilo),
    CONSTRAINT fk_pelea_estilo_peleador FOREIGN KEY (id_peleador)
        REFERENCES peleador(id_peleador),
    CONSTRAINT fk_pelea_estilo_estilo FOREIGN KEY (id_estilo)
        REFERENCES estilo_combate(id_estilo)
);

-- Tabla de eventos (ej: UFC 300, Fight Night, etc.)
CREATE TABLE evento (
    id_evento   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre      VARCHAR2(100) NOT NULL,
    fecha       DATE NOT NULL,
    lugar       VARCHAR2(100)
);

-- Tabla de peleas (cada evento tiene varias peleas)
CREATE TABLE pelea (
    id_pelea       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_evento      NUMBER NOT NULL,
    id_peleador1   NUMBER NOT NULL,
    id_peleador2   NUMBER NOT NULL,
    resultado      VARCHAR2(50), -- Ej: "KO", "Sumisión", "Decisión"
    ganador        NUMBER,       -- ID del peleador ganador
    CONSTRAINT fk_pelea_evento FOREIGN KEY (id_evento)
        REFERENCES evento(id_evento),
    CONSTRAINT fk_pelea_peleador1 FOREIGN KEY (id_peleador1)
        REFERENCES peleador(id_peleador),
    CONSTRAINT fk_pelea_peleador2 FOREIGN KEY (id_peleador2)
        REFERENCES peleador(id_peleador),
    CONSTRAINT fk_pelea_ganador FOREIGN KEY (ganador)
        REFERENCES peleador(id_peleador),
    CONSTRAINT chk_pelea_distintos CHECK (id_peleador1 <> id_peleador2)
);

-- Tabla de ranking libra por libra
CREATE TABLE ranking_libra_libra (
    id_ranking   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_peleador  NUMBER NOT NULL,
    posicion     NUMBER NOT NULL,
    fecha        DATE DEFAULT SYSDATE,
    CONSTRAINT fk_ranking_peleador FOREIGN KEY (id_peleador)
        REFERENCES peleador(id_peleador),
    CONSTRAINT uq_ranking UNIQUE (posicion, fecha) -- cada posición única en cada fecha
);


-- Ranking por categoría de peso (ej: Top 15 en cada división)
CREATE TABLE ranking_categoria (
    id_ranking     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_categoria   NUMBER NOT NULL,
    id_peleador    NUMBER NOT NULL,
    posicion       NUMBER NOT NULL, -- 1 al 15
    fecha          DATE DEFAULT SYSDATE,
    CONSTRAINT fk_rankcat_categoria FOREIGN KEY (id_categoria)
        REFERENCES categoria_peso(id_categoria),
    CONSTRAINT fk_rankcat_peleador FOREIGN KEY (id_peleador)
        REFERENCES peleador(id_peleador),
    CONSTRAINT uq_rankcat UNIQUE (id_categoria, posicion, fecha),
    CONSTRAINT chk_rankcat_pos CHECK (posicion BETWEEN 1 AND 15)
);


--Tabla para guardar filas antiguas después de un update
CREATE TABLE peleador_auditoria (
    id_auditoria    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_peleador     NUMBER,
    nombre          VARCHAR2(100),
    apodo           VARCHAR2(50),
    edad            NUMBER(3),
    nacionalidad    VARCHAR2(50),
    id_categoria    NUMBER,
    victorias       NUMBER,
    derrotas        NUMBER,
    empates         NUMBER,
    fecha_auditoria DATE DEFAULT SYSDATE
);

